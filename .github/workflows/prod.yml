name: CI/CD for Prod

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  java:
    name: build java
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Run tests and build project
        env:
          PROFILE_ACTIVE: 'test'
        run: mvn clean install

  docker:

    runs-on: ubuntu-latest
    name: build docker image
    needs: java

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'oracle'
          cache: maven

      - name: Build java project
        run: mvn clean package -DskipTests

      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: fredsonchaves07/movie-catch-api
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

#  deploy:
#    runs-on: ubuntu-latest
#    name: deploy application
#    needs: docker
#    steps:
#      - name: SSH deploy
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.DEPLOY_HOST }}
#          username: ${{ secrets.DEPLOY_USER }}
#          key: ${{ secrets.DEPLOY_KEY }}
#          port: ${{ secrets.DEPLOY_PORT }}
#          script: |
#            cd ~
#            cd movie-catch-api
#            git pull
#            docker-compose stop
#            docker image rm fredsonchaves07/movie-catch-api:latest
#            docker-compose -f docker-compose-prod.yml up -d